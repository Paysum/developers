{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI Paysum",
    "description": "Paysum API documented in the OpenAPI specification",
    "license": {
      "name": "CC-BY-NC-4.0",
      "url": "https://creativecommons.org/licenses/by-nc/4.0/"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://paysum.dev/api/v1"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/plants": {
      "get": {
        "description": "Returns all plants from the system that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a payment",
        "requestBody": {
          "description": "payment JSON to be created",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "shopId"
                ],
                "properties": {
                  "shopId": {
                    "type": "string",
                    "example": "01JWJBQ4HZ8G6VJB590G4A3DCQ",
                    "description": "Shop ID displayed on the API keys page. This will identify the specific shop you want the payment created on."
                  },
                  "gateway": {
                    "$ref": "#/components/schemas/gateway"
                  },
                  "cost": {
                    "type": "integer",
                    "example": 99,
                    "description": "Required if products not defined. This cost will show to the customer. You must provide this in cents format. Example â€” 0,99 is 99. 4,99 is 499"
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "HKD",
                      "ISK",
                      "PHP",
                      "DKK",
                      "HUF",
                      "CZK",
                      "GBP",
                      "RON",
                      "SEK",
                      "IDR",
                      "INR",
                      "BRL",
                      "RUB",
                      "HRK",
                      "JPY",
                      "THB",
                      "CHF",
                      "EUR",
                      "MYR",
                      "BGN",
                      "TRY",
                      "CNY",
                      "NOK",
                      "NZD",
                      "ZAR",
                      "USD",
                      "MXN",
                      "SGD",
                      "AUD",
                      "ILS",
                      "KRW",
                      "PLN"
                    ],
                    "example": "EUR",
                    "description": "Can be used to define currency for the payment"
                  },
                  "quantity": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 5,
                    "description": "Can be passed with products defined or not. The cost or product's price will be multiplied by this amount"
                  },
                  "email": {
                    "type": "string",
                    "example": "customer@gmail.com",
                    "description": "Email of the customer. Should you want to handle emails on your own, pass to this field a company email for which receipts of orders will be sent for accounting and log purposes"
                  },
                  "custom_fields": {
                    "$ref": "#/components/schemas/custom_fields_object"
                  },
                  "products": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "01JXB9BZ1B4S9QQ5SCVZC4D9B7"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plant"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/plants/{id}": {
      "delete": {
        "description": "Deletes a single plant based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of plant to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Plant": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "custom_fields_object": {
        "type": "object",
        "example": {
          "username": "software-username"
        },
        "description": "The custom fields passed by the user at checkout. The format are key-value pairs."
      },
      "gateway": {
        "type": "string",
        "enum": [
          "STRIPE",
          "CRYPTO"
        ],
        "example": "STRIPE"
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  }
}